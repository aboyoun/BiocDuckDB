% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DuckDBArraySeed.R
\name{DuckDBArraySeed}
\alias{DuckDBArraySeed}
\alias{DuckDBArraySeed-class}
\alias{[,DuckDBArraySeed,ANY,ANY,ANY-method}
\alias{aperm,DuckDBArraySeed-method}
\alias{dbconn,DuckDBArraySeed-method}
\alias{DelayedArray,DuckDBArraySeed-method}
\alias{dim,DuckDBArraySeed-method}
\alias{dimnames,DuckDBArraySeed-method}
\alias{extract_array,DuckDBArraySeed-method}
\alias{extract_sparse_array,DuckDBArraySeed-method}
\alias{is_nonzero,DuckDBArraySeed-method}
\alias{is_sparse,DuckDBArraySeed-method}
\alias{is.finite,DuckDBArraySeed-method}
\alias{is.infinite,DuckDBArraySeed-method}
\alias{is.nan,DuckDBArraySeed-method}
\alias{nzcount,DuckDBArraySeed-method}
\alias{t,DuckDBArraySeed-method}
\alias{type,DuckDBArraySeed-method}
\alias{type<-,DuckDBArraySeed-method}
\alias{Ops,DuckDBArraySeed,DuckDBArraySeed-method}
\alias{Ops,DuckDBArraySeed,atomic-method}
\alias{Ops,atomic,DuckDBArraySeed-method}
\alias{Math,DuckDBArraySeed-method}
\alias{Summary,DuckDBArraySeed-method}
\alias{mean,DuckDBArraySeed-method}
\alias{median.DuckDBArraySeed}
\alias{quantile.DuckDBArraySeed}
\alias{var,DuckDBArraySeed,ANY-method}
\alias{sd,DuckDBArraySeed-method}
\alias{mad,DuckDBArraySeed-method}
\alias{IQR,DuckDBArraySeed-method}
\title{DuckDBArraySeed objects}
\usage{
DuckDBArraySeed(conn, keycols, datacols, type = NULL)
}
\arguments{
\item{conn}{Either a character vector containing the paths to parquet, csv,
or gzipped csv data files; a string that defines a duckdb \code{read_*} data
source; or a \code{tbl_duckdb_connection} object.}

\item{keycols}{Either a character vector of column names from \code{conn}
that will specify the dimension names, or a named list of character vectors
where the names of the list specify the dimension names and the character
vectors set the distinct values for the dimension names.}

\item{datacols}{Either a string specifying the column from \code{conn} or a
named \code{expression} that will be evaluated in the context of \code{conn}
that defines the values in the array.}

\item{type}{String specifying the type of the data values; one of
\code{"logical"}, \code{"integer"}, \code{"integer64"}, \code{"double"}, or
\code{"character"}. If \code{NULL}, it is determined by inspecting the data.}
}
\description{
DuckDBArraySeed is a low-level helper class for representing a
pointer to a DuckDB table.

Note that a DuckDBArraySeed object is not intended to be used directly.
Most end users will typically create and manipulate a higher-level
\link{DuckDBArray} object instead. See \code{?\link{DuckDBArray}} for
more information.
}
\examples{
# Create a data.frame from the Titanic data
df <- do.call(expand.grid, c(dimnames(Titanic), stringsAsFactors = FALSE))
df$fate <- as.integer(Titanic[as.matrix(df)])

# Write data to a parquet file
tf <- tempfile(fileext = ".parquet")
on.exit(unlink(tf))
arrow::write_parquet(df, tf)

pqaseed <- DuckDBArraySeed(tf, keycols = c("Class", "Sex", "Age", "Survived"), datacols = "fate")

}
\seealso{
\code{\link{DuckDBArray}},
\code{\link[S4Arrays]{Array}}
}
\author{
Patrick Aboyoun
}
