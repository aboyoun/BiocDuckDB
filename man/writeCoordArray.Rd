% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeCoordArray.R
\name{writeCoordArray}
\alias{writeCoordArray}
\title{Write an Array-Like Object in Coordinate Format}
\usage{
writeCoordArray(
  x,
  path,
  keycols = names(dimnames(x)) \%||\% sprintf("dim\%d", seq_along(dim(x))),
  datacol = "value",
  dimtbls = NULL,
  partitioning = unlist(lapply(dimtbls, colnames), use.names = FALSE),
  ...
)
}
\arguments{
\item{x}{An array-like object.}

\item{path}{The path to write the array-like object to.}

\item{keycols}{A character vector of column names for the dimensions of the
array in the resulting table.}

\item{datacol}{The name for the column containing the array values in the
resulting table.}

\item{dimtbls}{An optional list of data.frame or DataFrame objects that
define the partitioning in \code{arrow::write_dataset}. If specified, the
list must have the same length as the number of dimensions of the array and
the elements must have rownames that match the corresponding dimnames
element.}

\item{partitioning}{A character vector of column names for the partitions of
the array in the resulting table.}

\item{...}{Additional arguments to pass to \code{arrow::write_dataset}.}
}
\description{
An \code{arrow::write_dataset} wrapper function to write array-like objects
in coordinate format. If dimension names are present, they are substituted
for the corresponding indices.
}
\examples{
# Write the Titanic dataset to a single Parquet file
tf1 <- tempfile()
writeCoordArray(Titanic, tf1)
list.files(tf1, full.names = TRUE, recursive = TRUE)

# Write the Titanic dataset to a single csv file
tf2 <- tempfile()
writeCoordArray(Titanic, tf2, format = "csv")
list.files(tf2, full.names = TRUE, recursive = TRUE)

# Write the state.x77 matrix to multiple Parquet files
tf3 <- tempfile()
dimtbls <- list(data.frame(region = state.region,
                           division = state.division,
                           row.names = state.name),
                NULL)
writeCoordArray(state.x77, tf3, dimtbls = dimtbls)
list.files(tf3, full.names = TRUE, recursive = TRUE)

}
\author{
Patrick Aboyoun
}
\keyword{IO}
