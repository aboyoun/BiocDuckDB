% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DuckDBTable.R
\name{DuckDBTable}
\alias{DuckDBTable}
\alias{DuckDBTable-class}
\alias{[,DuckDBTable,ANY,ANY,ANY-method}
\alias{all.equal.DuckDBTable}
\alias{as.data.frame,DuckDBTable-method}
\alias{bindCOLS,DuckDBTable-method}
\alias{colnames,DuckDBTable-method}
\alias{colnames<-,DuckDBTable-method}
\alias{coltypes}
\alias{coltypes,DuckDBTable-method}
\alias{coltypes<-}
\alias{coltypes<-,DuckDBTable-method}
\alias{dbconn,DuckDBTable-method}
\alias{is_nonzero,DuckDBTable-method}
\alias{is_sparse,DuckDBTable-method}
\alias{ncol,DuckDBTable-method}
\alias{nrow,DuckDBTable-method}
\alias{nzcount,DuckDBTable-method}
\alias{rownames,DuckDBTable-method}
\alias{Ops,DuckDBTable,DuckDBTable-method}
\alias{Ops,DuckDBTable,atomic-method}
\alias{Ops,atomic,DuckDBTable-method}
\alias{Math,DuckDBTable-method}
\alias{Summary,DuckDBTable-method}
\alias{mean,DuckDBTable-method}
\alias{median.DuckDBTable}
\alias{quantile.DuckDBTable}
\alias{var,DuckDBTable,ANY-method}
\alias{sd,DuckDBTable-method}
\alias{mad,DuckDBTable-method}
\alias{IQR,DuckDBTable-method}
\title{DuckDBTable objects}
\usage{
DuckDBTable(
  con,
  keycols,
  datacols = setdiff(colnames(con), names(keycols)),
  type = NULL,
  ...
)
}
\arguments{
\item{con}{Either a string containing the path to the underlying data files
or a \code{tbl_duckdb_connection} object.}

\item{keycols}{An optional character vector or a list of character vectors
containing the names of the columns that comprise the primary key. If missing,
a \code{row_number} column is created as an identifier.}

\item{datacols}{Either a character vector containing the names of the columns
in the DuckDB table that specify the data columns.}

\item{type}{An optional named character vector where the names specify the
column names and the values specify the column type; one of
\code{"logical"}, \code{"integer"}, \code{"integer64"}, \code{"double"}, or
\code{"character"}.}

\item{...}{Further arguments to be passed to \code{read_parquet}.}
}
\description{
DuckDBTable is a low-level helper class for representing a
pointer to a \code{tbl_duckdb_connection} object.
}
\examples{
# Create a data.frame from the Titanic data
df <- do.call(expand.grid, c(dimnames(Titanic), stringsAsFactors = FALSE))
df$fate <- as.integer(Titanic[as.matrix(df)])

# Write data to a parquet file
tf <- tempfile()
on.exit(unlink(tf))
arrow::write_parquet(df, tf)

tbl <- DuckDBTable(tf, keycols = c("Class", "Sex", "Age", "Survived"), datacols = "fate")

}
\author{
Patrick Aboyoun
}
