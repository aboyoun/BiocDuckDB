% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DuckDBTransposedDataFrame.R
\name{DuckDBTransposedDataFrame-class}
\alias{DuckDBTransposedDataFrame-class}
\alias{dbconn,DuckDBTransposedDataFrame-method}
\alias{tblconn,DuckDBTransposedDataFrame-method}
\alias{t,DuckDBDataFrame-method}
\alias{t.DuckDBDataFrame}
\alias{as.matrix,DuckDBTransposedDataFrame-method}
\alias{realize,DuckDBTransposedDataFrame-method}
\alias{show,DuckDBTransposedDataFrame-method}
\title{DuckDBTransposedDataFrame objects}
\description{
The DuckDBTransposedDataFrame class extends \linkS4class{TransposedDataFrame}
to represent a DuckDB table as a \linkS4class{TransposedDataFrame} object.
}
\details{
DuckDBTransposedDataFrame objects are constructed by calling \code{t()} on a
\linkS4class{DuckDBDataFrame} object.
}
\section{Constructor}{

\describe{
  \item{\code{t(x)}:}{
    Creates a DuckDBTransposedDataFrame object from a DuckDBDataFrame object.
  }
}
}

\section{Accessors}{

In the code snippets below, \code{x} is a DuckDBTransposedDataFrame object:
\describe{
  \item{\code{dim(x)}:}{
    Length two integer vector defined as \code{c(nrow(x), ncol(x))}.
  }
  \item{\code{nrow(x)}, \code{ncol(x)}:}{
    Get the number of rows and columns, respectively.
  }
  \item{\code{NROW(x)}, \code{NCOL(x)}:}{
    Same as \code{nrow(x)} and \code{ncol(x)}, respectively.
  }
  \item{\code{dimnames(x)}:}{
    Length two list of character vectors defined as
    \code{list(rownames(x), colnames(x))}.
  }
  \item{\code{rownames(x)}, \code{colnames(x)}:}{
    Get the names of the rows and columns, respectively.
  }
}
}

\section{Subsetting}{

In the code snippets below, \code{x} is a DuckDBTransposedDataFrame object:
\describe{
  \item{\code{x[i, j, drop = TRUE]}:}{
    Returns either a new DuckDBTransposedDataFrame object or a DuckDBColumn
    if selecting a single row and \code{drop = TRUE}.
  }
}
}

\section{Displaying}{

The \code{show()} method for DuckDBTransposedDataFrame objects obeys global
options \code{showHeadLines} and \code{showTailLines} for controlling the
number of head and tail rows to display.
}

\examples{
# Mocking up a file:
tf <- tempfile(fileext = ".parquet")
on.exit(unlink(tf))
arrow::write_parquet(cbind(model = rownames(mtcars), mtcars), tf)

# Creating our DuckDB-backed data frame:
tdf <- t(DuckDBDataFrame(tf, datacols = colnames(mtcars), keycol = "model"))
tdf

# Slicing DuckDBTransposedDataFrame objects:
tdf[,1:5]
tdf[1:5,]

}
\author{
Patrick Aboyoun
}
\keyword{classes}
\keyword{methods}
